version: '3.8'

services:
  db:
    image: postgres:latest
    container_name: postgres_db
    environment:
      POSTGRES_DB: pt_db
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - db_net
    restart: always

  db_repl:
    image: postgres:latest
    container_name: postgres_db_repl
    environment:
      POSTGRES_DB: pt_db
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      REPLICATION_ROLE: 'replica'
      REPLICATION_PRIMARY_HOST: postgres_db
      REPLICATION_PRIMARY_PORT: '5432'
      REPLICATION_USER: 'root'
      REPLICATION_PASSWORD: 'root'
    volumes:
      - db_repl_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - db_net
    restart: always
    depends_on:
      - db

  bot:
    image: pt_start_devops-bot
    container_name: tg_bot
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      DB_HOST: postgres_db
      DB_PORT: 5432
      DB_USER: root
      DB_PASSWORD: root
      DB_NAME: pt_db
    ports:
      - "8000:8000"
    networks:
      - db_net
    restart: always
    depends_on:
      - db

  registry:
    image: registry:2
    container_name: registry
    ports:
      - "5000:5000"
    volumes:
      - registry_data:/var/lib/registry
    networks:
      - db_net
    restart: always

networks:
  db_net:
    driver: bridge

volumes:
  db_data:
  db_repl_data:
  registry_data:
